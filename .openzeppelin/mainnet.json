{
  "manifestVersion": "3.1",
  "impls": {
    "c852cbe4dea09139c172e28bee1f61d420c7c22296b72da9a54d51dcb50118b8": {
      "address": "0xA8F5d3f8C14c0868856aC9Dd07f5DAf4E775F1e9",
      "txHash": "0x047751365b4afa16bd9bba578d45593eb8d4aaa431edb90b9ddcad4168e276d2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "openzeppelin/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "openzeppelin/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/GSN/Context.sol:39"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)2089_storage)",
            "src": "openzeppelin/access/AccessControl.sol:59"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "openzeppelin/access/AccessControl.sol:211"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "openzeppelin/token/ERC20/ERC20.sol:38"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "openzeppelin/token/ERC20/ERC20.sol:40"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "openzeppelin/token/ERC20/ERC20.sol:42"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "openzeppelin/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "openzeppelin/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "openzeppelin/token/ERC20/ERC20.sol:46"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "openzeppelin/token/ERC20/ERC20.sol:318"
          },
          {
            "contract": "ERC20BurnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/token/ERC20/ERC20Burnable.sol:54"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "openzeppelin/utils/Pausable.sol:27"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "openzeppelin/utils/Pausable.sol:85"
          },
          {
            "contract": "ERC20PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/token/ERC20/ERC20Pausable.sol:40"
          },
          {
            "contract": "ERC20PresetMinterPauserUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/presets/ERC20PresetMinterPauser.sol:102"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)2089_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          }
        }
      }
    },
    "05b05f9d616f840f6317a77a84b69f7881fef1d36d7752f1741cee1537555dd3": {
      "address": "0x616d23cCA0a59DA3431B0215C9b17eFEA682819F",
      "txHash": "0xd6972d2963af155bd36f4474e11ab94cec72543f43cd7f7f9c3bc7a79b28b651",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "openzeppelin/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "openzeppelin/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/GSN/Context.sol:39"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "openzeppelin/access/Ownable.sol:19"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "openzeppelin/access/Ownable.sol:79"
          },
          {
            "contract": "LockUpPool",
            "label": "PENALTY_RATE",
            "type": "t_uint256",
            "src": "LockUpPool.sol:16"
          },
          {
            "contract": "LockUpPool",
            "label": "PLATFORM_FEE_RATE",
            "type": "t_uint256",
            "src": "LockUpPool.sol:17"
          },
          {
            "contract": "LockUpPool",
            "label": "SECONDS_IN_MONTH",
            "type": "t_uint256",
            "src": "LockUpPool.sol:18"
          },
          {
            "contract": "LockUpPool",
            "label": "emergencyMode",
            "type": "t_bool",
            "src": "LockUpPool.sol:20"
          },
          {
            "contract": "LockUpPool",
            "label": "tokenStats",
            "type": "t_mapping(t_address,t_struct(TokenStats)146_storage)",
            "src": "LockUpPool.sol:57"
          },
          {
            "contract": "LockUpPool",
            "label": "pools",
            "type": "t_array(t_address)dyn_storage",
            "src": "LockUpPool.sol:60"
          },
          {
            "contract": "LockUpPool",
            "label": "userLockUps",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserLockUp)121_storage))",
            "src": "LockUpPool.sol:63"
          },
          {
            "contract": "LockUpPool",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "LockUpPool.sol:319"
          },
          {
            "contract": "WRNRewardPool",
            "label": "WRNToken",
            "type": "t_contract(ERC20PresetMinterPauserUpgradeSafe)2921",
            "src": "WRNRewardPool.sol:12"
          },
          {
            "contract": "WRNRewardPool",
            "label": "REWARD_START_BLOCK",
            "type": "t_uint256",
            "src": "WRNRewardPool.sol:15"
          },
          {
            "contract": "WRNRewardPool",
            "label": "REWARD_PER_BLOCK",
            "type": "t_uint256",
            "src": "WRNRewardPool.sol:16"
          },
          {
            "contract": "WRNRewardPool",
            "label": "REWARD_END_BLOCK",
            "type": "t_uint256",
            "src": "WRNRewardPool.sol:17"
          },
          {
            "contract": "WRNRewardPool",
            "label": "REWARD_EARLY_BONUS_END_BLOCK",
            "type": "t_uint256",
            "src": "WRNRewardPool.sol:18"
          },
          {
            "contract": "WRNRewardPool",
            "label": "REWARD_EARLY_BONUS_BOOST",
            "type": "t_uint256",
            "src": "WRNRewardPool.sol:19"
          },
          {
            "contract": "WRNRewardPool",
            "label": "totalMultiplier",
            "type": "t_uint256",
            "src": "WRNRewardPool.sol:21"
          },
          {
            "contract": "WRNRewardPool",
            "label": "wrnStats",
            "type": "t_mapping(t_address,t_struct(WRNStats)1232_storage)",
            "src": "WRNRewardPool.sol:34"
          },
          {
            "contract": "WRNRewardPool",
            "label": "userWRNRewards",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserWRNReward)1237_storage))",
            "src": "WRNRewardPool.sol:37"
          },
          {
            "contract": "WRNRewardPool",
            "label": "devAddress",
            "type": "t_address",
            "src": "WRNRewardPool.sol:40"
          },
          {
            "contract": "WRNRewardPool",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "WRNRewardPool.sol:233"
          }
        ],
        "types": {
          "t_contract(ERC20PresetMinterPauserUpgradeSafe)2921": {
            "label": "contract ERC20PresetMinterPauserUpgradeSafe"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(WRNStats)1232_storage)": {
            "label": "mapping(address => struct WRNRewardPool.WRNStats)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserWRNReward)1237_storage))": {
            "label": "mapping(address => mapping(address => struct WRNRewardPool.UserWRNReward))"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(TokenStats)146_storage)": {
            "label": "mapping(address => struct LockUpPool.TokenStats)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserLockUp)121_storage))": {
            "label": "mapping(address => mapping(address => struct LockUpPool.UserLockUp))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "0236c37c970548175a40fe52721bc68415db2e347864d721ab9e1669526c9d6e": {
      "address": "0xE4Eb73bf5Ce5A46fAC49a1c5C1F32a24699731D7",
      "txHash": "0x691b302700facb6ff14a3aad2c54e5ec003a392062b405b6829cbd73671108e4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "openzeppelin/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "openzeppelin/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/GSN/Context.sol:39"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)2016_storage)",
            "src": "openzeppelin/access/AccessControl.sol:59"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "openzeppelin/access/AccessControl.sol:211"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "openzeppelin/token/ERC20/ERC20.sol:38"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "openzeppelin/token/ERC20/ERC20.sol:40"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "openzeppelin/token/ERC20/ERC20.sol:42"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "openzeppelin/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "openzeppelin/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "openzeppelin/token/ERC20/ERC20.sol:46"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "openzeppelin/token/ERC20/ERC20.sol:318"
          },
          {
            "contract": "ERC20BurnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/token/ERC20/ERC20Burnable.sol:54"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "openzeppelin/utils/Pausable.sol:27"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "openzeppelin/utils/Pausable.sol:85"
          },
          {
            "contract": "ERC20PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/token/ERC20/ERC20Pausable.sol:40"
          },
          {
            "contract": "ERC20PresetMinterPauserUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/presets/ERC20PresetMinterPauser.sol:102"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)2016_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          }
        }
      }
    },
    "ac63fc8441674669aa610c319e42f5d4ecf68c64446b1f7891bcc4cf69a2b3ca": {
      "address": "0x6FD35902322e6bbD91DbAa635B90448030D8fB92",
      "txHash": "0xdb779b692a839e198f2f0101c3b64f621a63a74c077ad7d07f1728e4367d452f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "openzeppelin/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "openzeppelin/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/GSN/Context.sol:39"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "openzeppelin/access/Ownable.sol:19"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "openzeppelin/access/Ownable.sol:79"
          },
          {
            "contract": "LockUpPool",
            "label": "PENALTY_RATE",
            "type": "t_uint8",
            "src": "LockUpPool.sol:16"
          },
          {
            "contract": "LockUpPool",
            "label": "PLATFORM_FEE_RATE",
            "type": "t_uint8",
            "src": "LockUpPool.sol:17"
          },
          {
            "contract": "LockUpPool",
            "label": "SECONDS_IN_MONTH",
            "type": "t_uint24",
            "src": "LockUpPool.sol:18"
          },
          {
            "contract": "LockUpPool",
            "label": "emergencyMode",
            "type": "t_bool",
            "src": "LockUpPool.sol:20"
          },
          {
            "contract": "LockUpPool",
            "label": "tokenStats",
            "type": "t_mapping(t_address,t_struct(TokenStats)140_storage)",
            "src": "LockUpPool.sol:54"
          },
          {
            "contract": "LockUpPool",
            "label": "pools",
            "type": "t_array(t_address)dyn_storage",
            "src": "LockUpPool.sol:57"
          },
          {
            "contract": "LockUpPool",
            "label": "userLockUps",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserLockUp)119_storage))",
            "src": "LockUpPool.sol:60"
          },
          {
            "contract": "LockUpPool",
            "label": "fundAddress",
            "type": "t_address",
            "src": "LockUpPool.sol:63"
          },
          {
            "contract": "LockUpPool",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "LockUpPool.sol:313"
          },
          {
            "contract": "WRNRewardPool",
            "label": "WRNToken",
            "type": "t_contract(ERC20PresetMinterPauserUpgradeSafe)2848",
            "src": "WRNRewardPool.sol:12"
          },
          {
            "contract": "WRNRewardPool",
            "label": "REWARD_START_BLOCK",
            "type": "t_uint256",
            "src": "WRNRewardPool.sol:15"
          },
          {
            "contract": "WRNRewardPool",
            "label": "REWARD_END_BLOCK",
            "type": "t_uint256",
            "src": "WRNRewardPool.sol:16"
          },
          {
            "contract": "WRNRewardPool",
            "label": "REWARD_EARLY_BONUS_END_BLOCK",
            "type": "t_uint256",
            "src": "WRNRewardPool.sol:17"
          },
          {
            "contract": "WRNRewardPool",
            "label": "REWARD_PER_BLOCK",
            "type": "t_uint256",
            "src": "WRNRewardPool.sol:18"
          },
          {
            "contract": "WRNRewardPool",
            "label": "REWARD_EARLY_BONUS_BOOST",
            "type": "t_uint8",
            "src": "WRNRewardPool.sol:19"
          },
          {
            "contract": "WRNRewardPool",
            "label": "totalMultiplier",
            "type": "t_uint16",
            "src": "WRNRewardPool.sol:21"
          },
          {
            "contract": "WRNRewardPool",
            "label": "wrnStats",
            "type": "t_mapping(t_address,t_struct(WRNStats)1159_storage)",
            "src": "WRNRewardPool.sol:34"
          },
          {
            "contract": "WRNRewardPool",
            "label": "userWRNRewards",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserWRNReward)1164_storage))",
            "src": "WRNRewardPool.sol:37"
          },
          {
            "contract": "WRNRewardPool",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "WRNRewardPool.sol:231"
          }
        ],
        "types": {
          "t_contract(ERC20PresetMinterPauserUpgradeSafe)2848": {
            "label": "contract ERC20PresetMinterPauserUpgradeSafe"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_struct(WRNStats)1159_storage)": {
            "label": "mapping(address => struct WRNRewardPool.WRNStats)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserWRNReward)1164_storage))": {
            "label": "mapping(address => mapping(address => struct WRNRewardPool.UserWRNReward))"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(TokenStats)140_storage)": {
            "label": "mapping(address => struct LockUpPool.TokenStats)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserLockUp)119_storage))": {
            "label": "mapping(address => mapping(address => struct LockUpPool.UserLockUp))"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "d56d1d11b9c8f07a4a9a11309a83e60a885034c3055be6cbc4041b3436cb8af9": {
      "address": "0x51f162b76F6Ae17d76df498c1f5a51A01d3A27F5",
      "txHash": "0xf82ecfe7afa0b53fce1a2adbd23399ba6ca6dc089ea7eae7fe3be350b8f807a1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "openzeppelin/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "openzeppelin/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/GSN/Context.sol:39"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "openzeppelin/access/Ownable.sol:19"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "openzeppelin/access/Ownable.sol:79"
          },
          {
            "contract": "LockUpPool",
            "label": "PENALTY_RATE",
            "type": "t_uint8",
            "src": "LockUpPool.sol:16"
          },
          {
            "contract": "LockUpPool",
            "label": "PLATFORM_FEE_RATE",
            "type": "t_uint8",
            "src": "LockUpPool.sol:17"
          },
          {
            "contract": "LockUpPool",
            "label": "SECONDS_IN_MONTH",
            "type": "t_uint24",
            "src": "LockUpPool.sol:18"
          },
          {
            "contract": "LockUpPool",
            "label": "emergencyMode",
            "type": "t_bool",
            "src": "LockUpPool.sol:20"
          },
          {
            "contract": "LockUpPool",
            "label": "tokenStats",
            "type": "t_mapping(t_address,t_struct(TokenStats)140_storage)",
            "src": "LockUpPool.sol:54"
          },
          {
            "contract": "LockUpPool",
            "label": "pools",
            "type": "t_array(t_address)dyn_storage",
            "src": "LockUpPool.sol:57"
          },
          {
            "contract": "LockUpPool",
            "label": "userLockUps",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserLockUp)119_storage))",
            "src": "LockUpPool.sol:60"
          },
          {
            "contract": "LockUpPool",
            "label": "fundAddress",
            "type": "t_address",
            "src": "LockUpPool.sol:63"
          },
          {
            "contract": "LockUpPool",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "LockUpPool.sol:313"
          },
          {
            "contract": "WRNRewardPoolV2",
            "label": "WRNToken",
            "type": "t_contract(ERC20PresetMinterPauserUpgradeSafe)3593",
            "src": "WRNRewardPoolV2.sol:12"
          },
          {
            "contract": "WRNRewardPoolV2",
            "label": "REWARD_START_BLOCK",
            "type": "t_uint256",
            "src": "WRNRewardPoolV2.sol:15"
          },
          {
            "contract": "WRNRewardPoolV2",
            "label": "REWARD_END_BLOCK",
            "type": "t_uint256",
            "src": "WRNRewardPoolV2.sol:16"
          },
          {
            "contract": "WRNRewardPoolV2",
            "label": "REWARD_EARLY_BONUS_END_BLOCK",
            "type": "t_uint256",
            "src": "WRNRewardPoolV2.sol:17"
          },
          {
            "contract": "WRNRewardPoolV2",
            "label": "REWARD_PER_BLOCK",
            "type": "t_uint256",
            "src": "WRNRewardPoolV2.sol:18"
          },
          {
            "contract": "WRNRewardPoolV2",
            "label": "REWARD_EARLY_BONUS_BOOST",
            "type": "t_uint8",
            "src": "WRNRewardPoolV2.sol:19"
          },
          {
            "contract": "WRNRewardPoolV2",
            "label": "totalMultiplier",
            "type": "t_uint16",
            "src": "WRNRewardPoolV2.sol:21"
          },
          {
            "contract": "WRNRewardPoolV2",
            "label": "wrnStats",
            "type": "t_mapping(t_address,t_struct(WRNStats)1890_storage)",
            "src": "WRNRewardPoolV2.sol:34"
          },
          {
            "contract": "WRNRewardPoolV2",
            "label": "userWRNRewards",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserWRNReward)1895_storage))",
            "src": "WRNRewardPoolV2.sol:37"
          },
          {
            "contract": "WRNRewardPoolV2",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "WRNRewardPoolV2.sol:236"
          }
        ],
        "types": {
          "t_contract(ERC20PresetMinterPauserUpgradeSafe)3593": {
            "label": "contract ERC20PresetMinterPauserUpgradeSafe"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_struct(WRNStats)1890_storage)": {
            "label": "mapping(address => struct WRNRewardPoolV2.WRNStats)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserWRNReward)1895_storage))": {
            "label": "mapping(address => mapping(address => struct WRNRewardPoolV2.UserWRNReward))"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(TokenStats)140_storage)": {
            "label": "mapping(address => struct LockUpPool.TokenStats)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserLockUp)119_storage))": {
            "label": "mapping(address => mapping(address => struct LockUpPool.UserLockUp))"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0x1aE9292E7bDe075458A05a6C3F4072a328e95609",
    "txHash": "0x8eabe80132df6b39495962f65b414bb516acd8638d854b84ea0d2c02f49664c0"
  }
}
